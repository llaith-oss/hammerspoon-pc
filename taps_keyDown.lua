
-- -------------------------------------------------------------------------------------
-- Trap keyDown
-- -------------------------------------------------------------------------------------
etKeyDown = hs.eventtap.new({hs.eventtap.event.types.keyDown}, function (e)
  local cancel = false
  local kc = e:getKeyCode() -- Key user pressed
  local keyFunction = nil
  local flags = hs.eventtap.checkKeyboardModifiers() -- Modifier keys user was pressing
  local mods = nil
  local data = e:getProperty(EVENTPROPERTY_EVENTSOURCEUSERDATA)

  -- Only do if not an event generated by another script- which sets the user data
  -- of the event to distinguish itself from user/OS key events. See getKeyEvent()
  if data == 55555 then return cancel end

  -- Experimental
  if semaphore == 1 then
    log('Semaphore set. Skipping event for keycode ' .. tostring(kc))
    return true
  end

  -- NO MODIFIER STROKES/COMBOS
  if not flags.ctrl and not flags.shift and not flags.alt and not flags.cmd then
    mods = 'noMods'
  end

  -- CTRL COMBOS
  if flags.ctrl and not flags.shift then
    mods = 'ctrlMods'
  end

  -- SHIFT COMBOS
  if flags.shift and not flags.ctrl then
    mods = 'shiftMods'
  end

  -- SHIFT+CTRL COMBOS
  if flags.shift and flags.ctrl then
    mods = 'ctrlShiftMods'
  end

  if mods == nil then
      mods = 'nil'
      cancel = false -- Send key through unaltered
  end

  log('keyDown event: keycode=' .. tostring(kc) .. '; userdata=' .. tostring(data) .. '; semaphore=' ..  tostring(semaphore) .. ';mods=' .. mods .. '; flags=' .. hs.inspect(e:getFlags()))
  if mods ~= 'nil' then
    keyFunction = keyFuncs[mods][kc]
    if keyFunction ~= nil then
      return keyFunction()
    else
      -- Debugging
      --hs.alert('PC Keys error: No function mapped to keycode ' .. tostring(kc))
    end

  end

  -- Cancel event or app will do what a normal key press doesfff
  return cancel

end)
etKeyDown:start()

-- -------------------------------------------------------------------------------------
-- Cancel any other keyboard events while another binding action (script) is working
ekKeyDownShuntCtrl = hs.eventtap.new({hs.eventtap.event.types.keyDown}, function (e)
  --print('keyDown (shunt) event userdata=' .. tostring(e:getProperty(EVENTPROPERTY_EVENTSOURCEUSERDATA)) .. "; Semaphore=" ..  tostring(semaphore))
  if e:getFlags().ctrl == true
      and e:getProperty(EVENTPROPERTY_EVENTSOURCEUSERDATA) < 55555
      and semaphore == 1 then
    print('Shunting ctrl event')
    return true
  end
end)
